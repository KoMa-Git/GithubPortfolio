{"uid":"52ef531f863a4591","name":"Register New User","fullName":"Flask.tests_Selenium.test_userflow_ui_selenium#test_register","historyId":"2d858200277dc750341ff112f29747a1","time":{"start":1760732513818,"stop":1760732514180,"duration":362},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=141.0.7390.107)\nStacktrace:\n#0 0x55bdd7d9067a <unknown>\n#1 0x55bdd780f566 <unknown>\n#2 0x55bdd7806470 <unknown>\n#3 0x55bdd77f7926 <unknown>\n#4 0x55bdd77f972b <unknown>\n#5 0x55bdd77f7eb1 <unknown>\n#6 0x55bdd77f7650 <unknown>\n#7 0x55bdd77f7302 <unknown>\n#8 0x55bdd77f5142 <unknown>\n#9 0x55bdd77f592a <unknown>\n#10 0x55bdd7812a99 <unknown>\n#11 0x55bdd78adee5 <unknown>\n#12 0x55bdd7887632 <unknown>\n#13 0x55bdd78ad328 <unknown>\n#14 0x55bdd7887403 <unknown>\n#15 0x55bdd7853b02 <unknown>\n#16 0x55bdd78547c1 <unknown>\n#17 0x55bdd7d54448 <unknown>\n#18 0x55bdd7d582af <unknown>\n#19 0x55bdd7d3b8d9 <unknown>\n#20 0x55bdd7d58e55 <unknown>\n#21 0x55bdd7d2113f <unknown>\n#22 0x55bdd7d7d4b8 <unknown>\n#23 0x55bdd7d7d693 <unknown>\n#24 0x55bdd7d8f613 <unknown>\n#25 0x7f190f49caa4 <unknown>\n#26 0x7f190f529c6c <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d2a98152f1cd02abb90c4fbc06c55718\")>\n\n    @allure.severity(Severity.CRITICAL)\n    @allure.title(\"Register New User\")\n    def test_register(driver):\n        with allure.step(\"Open Register Page\"):\n>           driver.get(f\"{BASE_URL}/register\")\n\nFlask/tests_Selenium/test_userflow_ui_selenium.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:479: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f29aac45180>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#24 0x55bdd7d8f613 \\\\u003Cunknown>\\\\n#25 0x7f190f49caa4 \\\\u003Cunknown>\\\\n#26 0x7f190f529c6c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=141.0.7390.107)\nE       Stacktrace:\nE       #0 0x55bdd7d9067a <unknown>\nE       #1 0x55bdd780f566 <unknown>\nE       #2 0x55bdd7806470 <unknown>\nE       #3 0x55bdd77f7926 <unknown>\nE       #4 0x55bdd77f972b <unknown>\nE       #5 0x55bdd77f7eb1 <unknown>\nE       #6 0x55bdd77f7650 <unknown>\nE       #7 0x55bdd77f7302 <unknown>\nE       #8 0x55bdd77f5142 <unknown>\nE       #9 0x55bdd77f592a <unknown>\nE       #10 0x55bdd7812a99 <unknown>\nE       #11 0x55bdd78adee5 <unknown>\nE       #12 0x55bdd7887632 <unknown>\nE       #13 0x55bdd78ad328 <unknown>\nE       #14 0x55bdd7887403 <unknown>\nE       #15 0x55bdd7853b02 <unknown>\nE       #16 0x55bdd78547c1 <unknown>\nE       #17 0x55bdd7d54448 <unknown>\nE       #18 0x55bdd7d582af <unknown>\nE       #19 0x55bdd7d3b8d9 <unknown>\nE       #20 0x55bdd7d58e55 <unknown>\nE       #21 0x55bdd7d2113f <unknown>\nE       #22 0x55bdd7d7d4b8 <unknown>\nE       #23 0x55bdd7d7d693 <unknown>\nE       #24 0x55bdd7d8f613 <unknown>\nE       #25 0x7f190f49caa4 <unknown>\nE       #26 0x7f190f529c6c <unknown>\n\n/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:232: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1760732507360,"stop":1760732513817,"duration":6457},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=141.0.7390.107)\nStacktrace:\n#0 0x55bdd7d9067a <unknown>\n#1 0x55bdd780f566 <unknown>\n#2 0x55bdd7806470 <unknown>\n#3 0x55bdd77f7926 <unknown>\n#4 0x55bdd77f972b <unknown>\n#5 0x55bdd77f7eb1 <unknown>\n#6 0x55bdd77f7650 <unknown>\n#7 0x55bdd77f7302 <unknown>\n#8 0x55bdd77f5142 <unknown>\n#9 0x55bdd77f592a <unknown>\n#10 0x55bdd7812a99 <unknown>\n#11 0x55bdd78adee5 <unknown>\n#12 0x55bdd7887632 <unknown>\n#13 0x55bdd78ad328 <unknown>\n#14 0x55bdd7887403 <unknown>\n#15 0x55bdd7853b02 <unknown>\n#16 0x55bdd78547c1 <unknown>\n#17 0x55bdd7d54448 <unknown>\n#18 0x55bdd7d582af <unknown>\n#19 0x55bdd7d3b8d9 <unknown>\n#20 0x55bdd7d58e55 <unknown>\n#21 0x55bdd7d2113f <unknown>\n#22 0x55bdd7d7d4b8 <unknown>\n#23 0x55bdd7d7d693 <unknown>\n#24 0x55bdd7d8f613 <unknown>\n#25 0x7f190f49caa4 <unknown>\n#26 0x7f190f529c6c <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d2a98152f1cd02abb90c4fbc06c55718\")>\n\n    @allure.severity(Severity.CRITICAL)\n    @allure.title(\"Register New User\")\n    def test_register(driver):\n        with allure.step(\"Open Register Page\"):\n>           driver.get(f\"{BASE_URL}/register\")\n\nFlask/tests_Selenium/test_userflow_ui_selenium.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:479: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f29aac45180>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#24 0x55bdd7d8f613 \\\\u003Cunknown>\\\\n#25 0x7f190f49caa4 \\\\u003Cunknown>\\\\n#26 0x7f190f529c6c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=141.0.7390.107)\nE       Stacktrace:\nE       #0 0x55bdd7d9067a <unknown>\nE       #1 0x55bdd780f566 <unknown>\nE       #2 0x55bdd7806470 <unknown>\nE       #3 0x55bdd77f7926 <unknown>\nE       #4 0x55bdd77f972b <unknown>\nE       #5 0x55bdd77f7eb1 <unknown>\nE       #6 0x55bdd77f7650 <unknown>\nE       #7 0x55bdd77f7302 <unknown>\nE       #8 0x55bdd77f5142 <unknown>\nE       #9 0x55bdd77f592a <unknown>\nE       #10 0x55bdd7812a99 <unknown>\nE       #11 0x55bdd78adee5 <unknown>\nE       #12 0x55bdd7887632 <unknown>\nE       #13 0x55bdd78ad328 <unknown>\nE       #14 0x55bdd7887403 <unknown>\nE       #15 0x55bdd7853b02 <unknown>\nE       #16 0x55bdd78547c1 <unknown>\nE       #17 0x55bdd7d54448 <unknown>\nE       #18 0x55bdd7d582af <unknown>\nE       #19 0x55bdd7d3b8d9 <unknown>\nE       #20 0x55bdd7d58e55 <unknown>\nE       #21 0x55bdd7d2113f <unknown>\nE       #22 0x55bdd7d7d4b8 <unknown>\nE       #23 0x55bdd7d7d693 <unknown>\nE       #24 0x55bdd7d8f613 <unknown>\nE       #25 0x7f190f49caa4 <unknown>\nE       #26 0x7f190f529c6c <unknown>\n\n/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:232: WebDriverException","steps":[{"name":"Open Register Page","time":{"start":1760732513818,"stop":1760732514180,"duration":362},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=141.0.7390.107)\nStacktrace:\n#0 0x55bdd7d9067a <unknown>\n#1 0x55bdd780f566 <unknown>\n#2 0x55bdd7806470 <unknown>\n#3 0x55bdd77f7926 <unknown>\n#4 0x55bdd77f972b <unknown>\n#5 0x55bdd77f7eb1 <unknown>\n#6 0x55bdd77f7650 <unknown>\n#7 0x55bdd77f7302 <unknown>\n#8 0x55bdd77f5142 <unknown>\n#9 0x55bdd77f592a <unknown>\n#10 0x55bdd7812a99 <unknown>\n#11 0x55bdd78adee5 <unknown>\n#12 0x55bdd7887632 <unknown>\n#13 0x55bdd78ad328 <unknown>\n#14 0x55bdd7887403 <unknown>\n#15 0x55bdd7853b02 <unknown>\n#16 0x55bdd78547c1 <unknown>\n#17 0x55bdd7d54448 <unknown>\n#18 0x55bdd7d582af <unknown>\n#19 0x55bdd7d3b8d9 <unknown>\n#20 0x55bdd7d58e55 <unknown>\n#21 0x55bdd7d2113f <unknown>\n#22 0x55bdd7d7d4b8 <unknown>\n#23 0x55bdd7d7d693 <unknown>\n#24 0x55bdd7d8f613 <unknown>\n#25 0x7f190f49caa4 <unknown>\n#26 0x7f190f529c6c <unknown>\n\n","statusTrace":"  File \"/home/runner/work/GithubPortfolio/GithubPortfolio/Flask/tests_Selenium/test_userflow_ui_selenium.py\", line 44, in test_register\n    driver.get(f\"{BASE_URL}/register\")\n  File \"/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 479, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 454, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"98541c4b2e05e973","name":"Screenshot","source":"98541c4b2e05e973.png","type":"image/png","size":30008}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1760732514364,"stop":1760732514422,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"critical"},{"name":"parentSuite","value":"Flask.tests_Selenium"},{"name":"suite","value":"test_userflow_ui_selenium"},{"name":"host","value":"runnervmzdgdc"},{"name":"thread","value":"2945-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Flask.tests_Selenium.test_userflow_ui_selenium"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"31e6b07e75e5deb7","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=141.0.7390.107)\nStacktrace:\n#0 0x562fe7b2a67a <unknown>\n#1 0x562fe75a9566 <unknown>\n#2 0x562fe75a0470 <unknown>\n#3 0x562fe7591926 <unknown>\n#4 0x562fe759372b <unknown>\n#5 0x562fe7591eb1 <unknown>\n#6 0x562fe7591650 <unknown>\n#7 0x562fe7591302 <unknown>\n#8 0x562fe758f142 <unknown>\n#9 0x562fe758f92a <unknown>\n#10 0x562fe75aca99 <unknown>\n#11 0x562fe7647ee5 <unknown>\n#12 0x562fe7621632 <unknown>\n#13 0x562fe7647328 <unknown>\n#14 0x562fe7621403 <unknown>\n#15 0x562fe75edb02 <unknown>\n#16 0x562fe75ee7c1 <unknown>\n#17 0x562fe7aee448 <unknown>\n#18 0x562fe7af22af <unknown>\n#19 0x562fe7ad58d9 <unknown>\n#20 0x562fe7af2e55 <unknown>\n#21 0x562fe7abb13f <unknown>\n#22 0x562fe7b174b8 <unknown>\n#23 0x562fe7b17693 <unknown>\n#24 0x562fe7b29613 <unknown>\n#25 0x7fd63689caa4 <unknown>\n#26 0x7fd636929c6c <unknown>","time":{"start":1760731957531,"stop":1760731959301,"duration":1770}},{"uid":"d1cb6525613071f4","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=141.0.7390.107)\nStacktrace:\n#0 0x563cdee6a67a <unknown>\n#1 0x563cde8e9566 <unknown>\n#2 0x563cde8e0470 <unknown>\n#3 0x563cde8d1926 <unknown>\n#4 0x563cde8d372b <unknown>\n#5 0x563cde8d1eb1 <unknown>\n#6 0x563cde8d1650 <unknown>\n#7 0x563cde8d1302 <unknown>\n#8 0x563cde8cf142 <unknown>\n#9 0x563cde8cf92a <unknown>\n#10 0x563cde8eca99 <unknown>\n#11 0x563cde987ee5 <unknown>\n#12 0x563cde961632 <unknown>\n#13 0x563cde987328 <unknown>\n#14 0x563cde961403 <unknown>\n#15 0x563cde92db02 <unknown>\n#16 0x563cde92e7c1 <unknown>\n#17 0x563cdee2e448 <unknown>\n#18 0x563cdee322af <unknown>\n#19 0x563cdee158d9 <unknown>\n#20 0x563cdee32e55 <unknown>\n#21 0x563cdedfb13f <unknown>\n#22 0x563cdee574b8 <unknown>\n#23 0x563cdee57693 <unknown>\n#24 0x563cdee69613 <unknown>\n#25 0x7f133a89caa4 <unknown>\n#26 0x7f133a929c6c <unknown>","time":{"start":1760731613393,"stop":1760731614047,"duration":654}},{"uid":"1ad640c97ac298b0","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=141.0.7390.107)\nStacktrace:\n#0 0x557b2f28767a <unknown>\n#1 0x557b2ed06566 <unknown>\n#2 0x557b2ecfd470 <unknown>\n#3 0x557b2ecee926 <unknown>\n#4 0x557b2ecf072b <unknown>\n#5 0x557b2eceeeb1 <unknown>\n#6 0x557b2ecee650 <unknown>\n#7 0x557b2ecee302 <unknown>\n#8 0x557b2ecec142 <unknown>\n#9 0x557b2ecec92a <unknown>\n#10 0x557b2ed09a99 <unknown>\n#11 0x557b2eda4ee5 <unknown>\n#12 0x557b2ed7e632 <unknown>\n#13 0x557b2eda4328 <unknown>\n#14 0x557b2ed7e403 <unknown>\n#15 0x557b2ed4ab02 <unknown>\n#16 0x557b2ed4b7c1 <unknown>\n#17 0x557b2f24b448 <unknown>\n#18 0x557b2f24f2af <unknown>\n#19 0x557b2f2328d9 <unknown>\n#20 0x557b2f24fe55 <unknown>\n#21 0x557b2f21813f <unknown>\n#22 0x557b2f2744b8 <unknown>\n#23 0x557b2f274693 <unknown>\n#24 0x557b2f286613 <unknown>\n#25 0x7fa1dea9caa4 <unknown>\n#26 0x7fa1deb29c6c <unknown>","time":{"start":1760730791489,"stop":1760730792041,"duration":552}}]},"tags":[]},"source":"52ef531f863a4591.json","parameterValues":[]}