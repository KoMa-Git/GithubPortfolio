{"uid":"1078fd41464a7765","name":"Change Password and Reset It Back","fullName":"Flask.tests_Selenium.test_userflow_ui_selenium#test_change_password","historyId":"fc2c4bc1132623b7f5a5f1b8e8379344","time":{"start":1760732515689,"stop":1760732515779,"duration":90},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=141.0.7390.107)\nStacktrace:\n#0 0x55f86a8e067a <unknown>\n#1 0x55f86a35f566 <unknown>\n#2 0x55f86a356470 <unknown>\n#3 0x55f86a347926 <unknown>\n#4 0x55f86a34972b <unknown>\n#5 0x55f86a347eb1 <unknown>\n#6 0x55f86a347650 <unknown>\n#7 0x55f86a347302 <unknown>\n#8 0x55f86a345142 <unknown>\n#9 0x55f86a34592a <unknown>\n#10 0x55f86a362a99 <unknown>\n#11 0x55f86a3fdee5 <unknown>\n#12 0x55f86a3d7632 <unknown>\n#13 0x55f86a3fd328 <unknown>\n#14 0x55f86a3d7403 <unknown>\n#15 0x55f86a3a3b02 <unknown>\n#16 0x55f86a3a47c1 <unknown>\n#17 0x55f86a8a4448 <unknown>\n#18 0x55f86a8a82af <unknown>\n#19 0x55f86a88b8d9 <unknown>\n#20 0x55f86a8a8e55 <unknown>\n#21 0x55f86a87113f <unknown>\n#22 0x55f86a8cd4b8 <unknown>\n#23 0x55f86a8cd693 <unknown>\n#24 0x55f86a8df613 <unknown>\n#25 0x7f65cf49caa4 <unknown>\n#26 0x7f65cf529c6c <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f9517f6443cebb90a2257f40fcad6360\")>\n\n    @allure.severity(Severity.NORMAL)\n    @allure.title(\"Change Password and Reset It Back\")\n    def test_change_password(driver):\n>       test_login(driver)\n\nFlask/tests_Selenium/test_userflow_ui_selenium.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nFlask/tests_Selenium/test_userflow_ui_selenium.py:60: in test_login\n    driver.get(f\"{BASE_URL}/login\")\n/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:479: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f29aaa4b2e0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#24 0x55f86a8df613 \\\\u003Cunknown>\\\\n#25 0x7f65cf49caa4 \\\\u003Cunknown>\\\\n#26 0x7f65cf529c6c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=141.0.7390.107)\nE       Stacktrace:\nE       #0 0x55f86a8e067a <unknown>\nE       #1 0x55f86a35f566 <unknown>\nE       #2 0x55f86a356470 <unknown>\nE       #3 0x55f86a347926 <unknown>\nE       #4 0x55f86a34972b <unknown>\nE       #5 0x55f86a347eb1 <unknown>\nE       #6 0x55f86a347650 <unknown>\nE       #7 0x55f86a347302 <unknown>\nE       #8 0x55f86a345142 <unknown>\nE       #9 0x55f86a34592a <unknown>\nE       #10 0x55f86a362a99 <unknown>\nE       #11 0x55f86a3fdee5 <unknown>\nE       #12 0x55f86a3d7632 <unknown>\nE       #13 0x55f86a3fd328 <unknown>\nE       #14 0x55f86a3d7403 <unknown>\nE       #15 0x55f86a3a3b02 <unknown>\nE       #16 0x55f86a3a47c1 <unknown>\nE       #17 0x55f86a8a4448 <unknown>\nE       #18 0x55f86a8a82af <unknown>\nE       #19 0x55f86a88b8d9 <unknown>\nE       #20 0x55f86a8a8e55 <unknown>\nE       #21 0x55f86a87113f <unknown>\nE       #22 0x55f86a8cd4b8 <unknown>\nE       #23 0x55f86a8cd693 <unknown>\nE       #24 0x55f86a8df613 <unknown>\nE       #25 0x7f65cf49caa4 <unknown>\nE       #26 0x7f65cf529c6c <unknown>\n\n/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:232: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1760732515433,"stop":1760732515688,"duration":255},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=141.0.7390.107)\nStacktrace:\n#0 0x55f86a8e067a <unknown>\n#1 0x55f86a35f566 <unknown>\n#2 0x55f86a356470 <unknown>\n#3 0x55f86a347926 <unknown>\n#4 0x55f86a34972b <unknown>\n#5 0x55f86a347eb1 <unknown>\n#6 0x55f86a347650 <unknown>\n#7 0x55f86a347302 <unknown>\n#8 0x55f86a345142 <unknown>\n#9 0x55f86a34592a <unknown>\n#10 0x55f86a362a99 <unknown>\n#11 0x55f86a3fdee5 <unknown>\n#12 0x55f86a3d7632 <unknown>\n#13 0x55f86a3fd328 <unknown>\n#14 0x55f86a3d7403 <unknown>\n#15 0x55f86a3a3b02 <unknown>\n#16 0x55f86a3a47c1 <unknown>\n#17 0x55f86a8a4448 <unknown>\n#18 0x55f86a8a82af <unknown>\n#19 0x55f86a88b8d9 <unknown>\n#20 0x55f86a8a8e55 <unknown>\n#21 0x55f86a87113f <unknown>\n#22 0x55f86a8cd4b8 <unknown>\n#23 0x55f86a8cd693 <unknown>\n#24 0x55f86a8df613 <unknown>\n#25 0x7f65cf49caa4 <unknown>\n#26 0x7f65cf529c6c <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f9517f6443cebb90a2257f40fcad6360\")>\n\n    @allure.severity(Severity.NORMAL)\n    @allure.title(\"Change Password and Reset It Back\")\n    def test_change_password(driver):\n>       test_login(driver)\n\nFlask/tests_Selenium/test_userflow_ui_selenium.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nFlask/tests_Selenium/test_userflow_ui_selenium.py:60: in test_login\n    driver.get(f\"{BASE_URL}/login\")\n/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:479: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f29aaa4b2e0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#24 0x55f86a8df613 \\\\u003Cunknown>\\\\n#25 0x7f65cf49caa4 \\\\u003Cunknown>\\\\n#26 0x7f65cf529c6c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=141.0.7390.107)\nE       Stacktrace:\nE       #0 0x55f86a8e067a <unknown>\nE       #1 0x55f86a35f566 <unknown>\nE       #2 0x55f86a356470 <unknown>\nE       #3 0x55f86a347926 <unknown>\nE       #4 0x55f86a34972b <unknown>\nE       #5 0x55f86a347eb1 <unknown>\nE       #6 0x55f86a347650 <unknown>\nE       #7 0x55f86a347302 <unknown>\nE       #8 0x55f86a345142 <unknown>\nE       #9 0x55f86a34592a <unknown>\nE       #10 0x55f86a362a99 <unknown>\nE       #11 0x55f86a3fdee5 <unknown>\nE       #12 0x55f86a3d7632 <unknown>\nE       #13 0x55f86a3fd328 <unknown>\nE       #14 0x55f86a3d7403 <unknown>\nE       #15 0x55f86a3a3b02 <unknown>\nE       #16 0x55f86a3a47c1 <unknown>\nE       #17 0x55f86a8a4448 <unknown>\nE       #18 0x55f86a8a82af <unknown>\nE       #19 0x55f86a88b8d9 <unknown>\nE       #20 0x55f86a8a8e55 <unknown>\nE       #21 0x55f86a87113f <unknown>\nE       #22 0x55f86a8cd4b8 <unknown>\nE       #23 0x55f86a8cd693 <unknown>\nE       #24 0x55f86a8df613 <unknown>\nE       #25 0x7f65cf49caa4 <unknown>\nE       #26 0x7f65cf529c6c <unknown>\n\n/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:232: WebDriverException","steps":[{"name":"Open Login Page","time":{"start":1760732515689,"stop":1760732515778,"duration":89},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=141.0.7390.107)\nStacktrace:\n#0 0x55f86a8e067a <unknown>\n#1 0x55f86a35f566 <unknown>\n#2 0x55f86a356470 <unknown>\n#3 0x55f86a347926 <unknown>\n#4 0x55f86a34972b <unknown>\n#5 0x55f86a347eb1 <unknown>\n#6 0x55f86a347650 <unknown>\n#7 0x55f86a347302 <unknown>\n#8 0x55f86a345142 <unknown>\n#9 0x55f86a34592a <unknown>\n#10 0x55f86a362a99 <unknown>\n#11 0x55f86a3fdee5 <unknown>\n#12 0x55f86a3d7632 <unknown>\n#13 0x55f86a3fd328 <unknown>\n#14 0x55f86a3d7403 <unknown>\n#15 0x55f86a3a3b02 <unknown>\n#16 0x55f86a3a47c1 <unknown>\n#17 0x55f86a8a4448 <unknown>\n#18 0x55f86a8a82af <unknown>\n#19 0x55f86a88b8d9 <unknown>\n#20 0x55f86a8a8e55 <unknown>\n#21 0x55f86a87113f <unknown>\n#22 0x55f86a8cd4b8 <unknown>\n#23 0x55f86a8cd693 <unknown>\n#24 0x55f86a8df613 <unknown>\n#25 0x7f65cf49caa4 <unknown>\n#26 0x7f65cf529c6c <unknown>\n\n","statusTrace":"  File \"/home/runner/work/GithubPortfolio/GithubPortfolio/Flask/tests_Selenium/test_userflow_ui_selenium.py\", line 60, in test_login\n    driver.get(f\"{BASE_URL}/login\")\n  File \"/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 479, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 454, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b0724745326dd2f","name":"Screenshot","source":"b0724745326dd2f.png","type":"image/png","size":30008}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1760732515889,"stop":1760732515947,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"parentSuite","value":"Flask.tests_Selenium"},{"name":"suite","value":"test_userflow_ui_selenium"},{"name":"host","value":"runnervmzdgdc"},{"name":"thread","value":"2945-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Flask.tests_Selenium.test_userflow_ui_selenium"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"73fa6e2f335342e3","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=141.0.7390.107)\nStacktrace:\n#0 0x5645d87ea67a <unknown>\n#1 0x5645d8269566 <unknown>\n#2 0x5645d8260470 <unknown>\n#3 0x5645d8251926 <unknown>\n#4 0x5645d825372b <unknown>\n#5 0x5645d8251eb1 <unknown>\n#6 0x5645d8251650 <unknown>\n#7 0x5645d8251302 <unknown>\n#8 0x5645d824f142 <unknown>\n#9 0x5645d824f92a <unknown>\n#10 0x5645d826ca99 <unknown>\n#11 0x5645d8307ee5 <unknown>\n#12 0x5645d82e1632 <unknown>\n#13 0x5645d8307328 <unknown>\n#14 0x5645d82e1403 <unknown>\n#15 0x5645d82adb02 <unknown>\n#16 0x5645d82ae7c1 <unknown>\n#17 0x5645d87ae448 <unknown>\n#18 0x5645d87b22af <unknown>\n#19 0x5645d87958d9 <unknown>\n#20 0x5645d87b2e55 <unknown>\n#21 0x5645d877b13f <unknown>\n#22 0x5645d87d74b8 <unknown>\n#23 0x5645d87d7693 <unknown>\n#24 0x5645d87e9613 <unknown>\n#25 0x7f04b789caa4 <unknown>\n#26 0x7f04b7929c6c <unknown>","time":{"start":1760731961075,"stop":1760731961164,"duration":89}},{"uid":"c1e7fa35e33ceebc","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=141.0.7390.107)\nStacktrace:\n#0 0x55e0a875e67a <unknown>\n#1 0x55e0a81dd566 <unknown>\n#2 0x55e0a81d4470 <unknown>\n#3 0x55e0a81c5926 <unknown>\n#4 0x55e0a81c772b <unknown>\n#5 0x55e0a81c5eb1 <unknown>\n#6 0x55e0a81c5650 <unknown>\n#7 0x55e0a81c5302 <unknown>\n#8 0x55e0a81c3142 <unknown>\n#9 0x55e0a81c392a <unknown>\n#10 0x55e0a81e0a99 <unknown>\n#11 0x55e0a827bee5 <unknown>\n#12 0x55e0a8255632 <unknown>\n#13 0x55e0a827b328 <unknown>\n#14 0x55e0a8255403 <unknown>\n#15 0x55e0a8221b02 <unknown>\n#16 0x55e0a82227c1 <unknown>\n#17 0x55e0a8722448 <unknown>\n#18 0x55e0a87262af <unknown>\n#19 0x55e0a87098d9 <unknown>\n#20 0x55e0a8726e55 <unknown>\n#21 0x55e0a86ef13f <unknown>\n#22 0x55e0a874b4b8 <unknown>\n#23 0x55e0a874b693 <unknown>\n#24 0x55e0a875d613 <unknown>\n#25 0x7f482609caa4 <unknown>\n#26 0x7f4826129c6c <unknown>","time":{"start":1760731615577,"stop":1760731615785,"duration":208}},{"uid":"5c330d77336ecf7","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=141.0.7390.107)\nStacktrace:\n#0 0x564a692e867a <unknown>\n#1 0x564a68d67566 <unknown>\n#2 0x564a68d5e470 <unknown>\n#3 0x564a68d4f926 <unknown>\n#4 0x564a68d5172b <unknown>\n#5 0x564a68d4feb1 <unknown>\n#6 0x564a68d4f650 <unknown>\n#7 0x564a68d4f302 <unknown>\n#8 0x564a68d4d142 <unknown>\n#9 0x564a68d4d92a <unknown>\n#10 0x564a68d6aa99 <unknown>\n#11 0x564a68e05ee5 <unknown>\n#12 0x564a68ddf632 <unknown>\n#13 0x564a68e05328 <unknown>\n#14 0x564a68ddf403 <unknown>\n#15 0x564a68dabb02 <unknown>\n#16 0x564a68dac7c1 <unknown>\n#17 0x564a692ac448 <unknown>\n#18 0x564a692b02af <unknown>\n#19 0x564a692938d9 <unknown>\n#20 0x564a692b0e55 <unknown>\n#21 0x564a6927913f <unknown>\n#22 0x564a692d54b8 <unknown>\n#23 0x564a692d5693 <unknown>\n#24 0x564a692e7613 <unknown>\n#25 0x7f076d09caa4 <unknown>\n#26 0x7f076d129c6c <unknown>","time":{"start":1760730793648,"stop":1760730793745,"duration":97}}]},"tags":[]},"source":"1078fd41464a7765.json","parameterValues":[]}